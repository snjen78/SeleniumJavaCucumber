package stepDefinitions;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.internal.common.assertion.Assertion;
import io.restassured.response.Response;
import io.restassured.response.ValidatableResponse;
import io.restassured.specification.RequestSpecification;
import org.junit.Assert;
import org.junit.Test;
import java.util.HashMap;
import java.util.prefs.Preferences;
import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.equalTo;


public class APITests {

    String baseURL="http://dummy.restapiexample.com";

    // GET request
    public void getAPIRequest(){

        Response resp= given().baseUri(baseURL).
            when().get("/api/v1/employees").andReturn();

        String body = resp.asString();
        System.out.println("Response Body==> "+ body);

//      Validation Step- Assertions for status code
        int statusCodeActual= resp.getStatusCode();
        int statusCodeExpected= 200;
        Assert.assertEquals(statusCodeExpected,statusCodeActual);

        // Validate the body
        if(body.contains("success")){
            System.out.println("Test Passed, Body contains values as expected");
            Assert.assertTrue("Body Validated Successfully", true);
        } else {
            Assert.assertTrue("Test Failed- Unable to validate Body", false);
        }

    }

    // Post request
    @Test
    public void postNewEmployeeData(){

        // Body which need to be posted in API
        String body_text= "{\"name\":\"Shashank\",\"salary\":\"50000\",\"age\":\"31\"}";

        // Header to update with POST request
        HashMap<String, String> header_to_update = new HashMap<String, String>();
        header_to_update.put("Content-Type","application/json");

        // Request Specification with Base URL and Header in a variable
        RequestSpecification request_spec = given().baseUri(baseURL).headers(header_to_update);

        // Make the POST request, and save it as a response, the body will also sent back to us with this request
        Response post_response = request_spec.when().body(body_text).post("/api/v1/create");
        ValidatableResponse valid_response = post_response.then();
        System.out.println("API Response===> "+post_response.asString());

        // Validate Assertions- verify posted data
        valid_response.assertThat().body("status",equalTo("success"))
                .assertThat().body("data.name",equalTo("Shashank"))
                .assertThat().body("data.salary",equalTo("50000"))
                .assertThat().body("data.age",equalTo("31"));

    }


    // OAuth-2.0 Authentication by access token
    @Test
    public void testOAuth(){

        Response resp = RestAssured
                .given()
                .auth()
                .oauth2("db9f912ed3c5084977b7256daa1a46627defff69") // copy access token here
                .post("http://coop.apps.symfonycasts.com/api/1847/eggs-collect"); // end-point goes here with user ID 1847
        System.out.println("Status Code==> "+resp.getStatusCode());

        System.out.println("Body==> "+resp.getBody().asString());

    }


    // Access API via Auto-generated access token for POST method
    @Test
    public void autoGeneratedAccessToken(){

        Response resp = RestAssured
                .given()
                .formParam("client_id","TestRest20889")
                .formParam("client_secret","a247a55d691ccd6676dbede8cb61fdb5")
                .formParam("grant_type","client_credentials")
                .post("http://coop.apps.symfonycasts.com/token");

        // Access Token is generated
        String accessToken = resp.jsonPath().get("access_token");
        System.out.println("Your Access Token==> "+accessToken);

        // check the response
        Response resp2 = RestAssured
                .given()
                .auth()
                .oauth2(accessToken) // generated access token here
                .post("http://coop.apps.symfonycasts.com/api/1847/eggs-collect"); // end-point goes here with user ID 1847

        System.out.println("Body==> "+resp2.getBody().asString());
        Assert.assertEquals(resp2.getStatusCode(),200);

    }


}
